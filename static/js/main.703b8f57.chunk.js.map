{"version":3,"sources":["App.style.js","component/button/button.style.js","component/button/button.component.jsx","component/button-list/button-list.style.js","component/button-list/button-list.component.jsx","component/popup/popup.component.jsx","component/introduction/introduction.style.js","component/introduction/introduction.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["AppTag","styled","div","Header","Input","input","ButtonTag","button","props","minWidth","Button","title","handleClick","onClick","ButtonListTag","ButtonList","englishText","changeEnglishText","buttonList","key","push","alphabet","Popup","isCloseButton","hidePopup","children","className","Content","Title","h4","Description","introductionData","Introduction","App","useState","isPopupVisible","switchPopup","type","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAEcA,EAASC,IAAOC,IAAV,6IAONC,EAASF,IAAOC,IAAV,uIAONE,EAAQH,IAAOI,MAAV,4GCdNC,EAAYL,IAAOM,OAAV,4lBAgBJ,SAAAC,GAAK,OAAIA,EAAMC,SAAWD,EAAMC,SAAW,S,OCV9CC,I,EAAAA,EANf,YAAiD,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,YAAaH,EAAW,EAAXA,SACjC,OACI,cAACH,EAAD,CAAWO,QAASD,EAAaH,SAAUA,EAA3C,SAAsDE,K,eCFjDG,EAAgBb,IAAOC,IAAV,yIC4BXa,MA1Bf,YAAwD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,kBAM1BC,EAAa,GANkC,WAQ1CC,GACLD,EAAWE,KACP,cAAC,EAAD,CACIT,MAAOU,EAASF,GAChBP,YAAa,WATrBK,EAAkBD,EASmBG,KAFpBA,KAFrB,IAAK,IAAIA,KAAOE,EAAW,EAAlBF,GAST,OACI,cAACL,EAAD,UAEQI,K,MCMDI,I,MAAAA,EA3Bf,SAAed,GAAQ,IAAD,EAQdA,EAJAe,qBAJc,WAQdf,EAHAgB,iBALc,MAKF,aALE,EAOdC,EACAjB,EADAiB,SAGJ,OACI,sBAAKC,UAAU,oBAAf,UACI,qBAAKA,UAAU,sBACf,sBAAKA,UAAU,4BAAf,UAEQH,EACM,qBAAKG,UAAU,uBAAuBb,QAASW,EAA/C,SAA0D,4CAC1D,KAEV,qBAAKE,UAAU,kBAAf,SACKD,WCrBRE,EAAU1B,IAAOC,IAAV,yOAUP0B,EAAQ3B,IAAO4B,GAAV,sEAILC,EAAc7B,IAAOC,IAAV,8FCbpB6B,EACO,+IADPA,EAEa,sSAFbA,EAGa,wFAaFC,MAVf,YAAsC,IAAfpB,EAAc,EAAdA,YACnB,OACI,eAACe,EAAD,WACI,cAACC,EAAD,UAAQG,IACR,cAACD,EAAD,UAAcC,IACd,cAAC,EAAD,CAAQnB,YAAaA,EAAaD,MAAOoB,QC6BtCE,MAhCf,WAAgB,IAAD,EAC4BC,mBAAS,IADrC,mBACNlB,EADM,KACOC,EADP,OAEuBiB,oBAAS,GAFhC,mBAENC,EAFM,KAEUX,EAFV,KAIX,SAASY,IACLZ,GAAWW,GASf,OACI,eAACnC,EAAD,WACI,eAACG,EAAD,WACI,cAACC,EAAD,CAAOiC,KAAK,OAAOC,MAAOtB,IAC1B,cAAC,EAAD,CAAQJ,YAVpB,WACIK,EAAkB,KASuBN,MAAM,IAAIF,SAAU,YAEzD,cAAC,EAAD,CAAYO,YAAaA,EAAaC,kBAAmBA,IAErDkB,EACM,cAAC,EAAD,CAAOX,UAAWY,EAAlB,SACE,cAAC,EAAD,CAAcxB,YAAawB,MAE7B,SCzBPG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.703b8f57.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport  const AppTag = styled.div`\r\n    padding: 10px;\r\n    max-width: 420px;\r\n    margin: 0 auto;\r\n    font-family: \"Roboto\", \"Arial\", sans-serif;\r\n`;\r\n\r\nexport  const Header = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: stretch;\r\n    margin: 0 0 2px 0;\r\n`;\r\n\r\nexport  const Input = styled.input`\r\n    font-size: 18px;\r\n    margin: 4px;\r\n    width: 80%;\r\n    padding: 4px 8px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ButtonTag = styled.button`\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    padding: 12px 4px;\r\n    margin: 2px;\r\n    appearance: none;\r\n    // background-color: #0030ff;\r\n    color: #000;\r\n    font-family: Roboto;\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n    border: none;\r\n    cursor: pointer;\r\n    position: relative;\r\n    transition: transform ease-in 0.1s, box-shadow ease-in 0.25s;\r\n    flex: 1 1 0px;\r\n    min-width: ${ props => props.minWidth ? props.minWidth : \"30%\" };\r\n    overflow: hidden;\r\n    -webkit-appearance: none;\r\n    border: solid 1px #000;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\n","import {ButtonTag} from \"./button.style\";\r\n\r\nfunction Button({title, handleClick, minWidth}) {\r\n    return (\r\n        <ButtonTag onClick={handleClick} minWidth={minWidth}>{title}</ButtonTag>\r\n    )\r\n}\r\n\r\nexport default Button;","import styled from 'styled-components';\r\n\r\nexport const ButtonListTag = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    flex-wrap: wrap;\r\n`;","import alphabet from \"../../alphabet.json\";\r\nimport Button from \"../button/button.component\";\r\nimport {ButtonListTag} from \"./button-list.style\";\r\n\r\nfunction ButtonList({englishText, changeEnglishText }) {\r\n\r\n    function addLetter(letter) {\r\n        changeEnglishText(englishText + letter);\r\n    }\r\n\r\n    let buttonList = [];\r\n\r\n    for (let key in alphabet) {\r\n        buttonList.push(\r\n            <Button key={key}\r\n                title={alphabet[key]}\r\n                handleClick={() => addLetter(key)}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ButtonListTag>\r\n            {\r\n                buttonList\r\n            }\r\n        </ButtonListTag>\r\n    )\r\n}\r\n\r\nexport default ButtonList;","import React, {useState} from 'react';\r\nimport './popup.style.css'\r\n\r\nfunction Popup(props) {\r\n\r\n    const {\r\n\r\n        isCloseButton = true,\r\n        hidePopup = () => {\r\n        },\r\n        children,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"f_popup_container\">\r\n            <div className=\"f_popup_wallpaper\"></div>\r\n            <div className=\"f_popup_content_container\">\r\n                {\r\n                    isCloseButton\r\n                        ? <div className=\"f_popup_close_button\" onClick={hidePopup}><span>&#10005;</span></div>\r\n                        : null\r\n                }\r\n                <div className=\"f_popup_content\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popup;","import styled from 'styled-components';\r\n\r\nexport const Content = styled.div`\r\n    border: solid 1px black;\r\n    border-radius: 4px;\r\n    padding: 6px 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin: 0 auto;\r\n`;\r\nexport const Title = styled.h4`\r\n    color: red;\r\n    text-align: center;\r\n`;\r\nexport const Description = styled.div`\r\n    color: blue;\r\n    font-size: 24px;\r\n    padding: 0 0 26px 0;\r\n`;\r\n","import {Title, Description, Content} from \"./introduction.style\";\r\nimport Button from \"../button/button.component\";\r\n\r\nlet introductionData = {\r\n    title: \"Вивчи Англійський алфавіт\",\r\n    description: \"Чи зможеш продиктувати своє імя і прізвище Англійською ?\",\r\n    buttonTitle: \"Перевірити себе\"\r\n};\r\n\r\nfunction Introduction({handleClick}) {\r\n    return (\r\n        <Content>\r\n            <Title>{introductionData.title}</Title>\r\n            <Description>{introductionData.description}</Description>\r\n            <Button handleClick={handleClick} title={introductionData.buttonTitle} />\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default Introduction;","import {useState} from 'react';\n\nimport {AppTag, Input} from './App.style';\nimport Button from \"./component/button/button.component\";\nimport {Header} from \"./App.style\";\nimport './App.css';\nimport ButtonList from \"./component/button-list/button-list.component\";\n// import Popup from \"./component/popup2/popup.component\";\nimport Popup from './component/popup/popup.component';\nimport Introduction from \"./component/introduction/introduction.component\";\n\nfunction App() {\n    let [englishText, changeEnglishText] = useState(\"\")\n    let [isPopupVisible, hidePopup] = useState(true);\n\n    function switchPopup() {\n        hidePopup(!isPopupVisible);\n    }\n\n    function clearState() {\n        changeEnglishText(\"\");\n    }\n\n\n\n    return (\n        <AppTag>\n            <Header>\n                <Input type=\"text\" value={englishText}/>\n                <Button handleClick={clearState} title=\"X\" minWidth={\"18px\"}/>\n            </Header>\n            <ButtonList englishText={englishText} changeEnglishText={changeEnglishText}/>\n            {\n                isPopupVisible\n                    ? <Popup hidePopup={switchPopup}>\n                        <Introduction handleClick={switchPopup}/>\n                    </Popup>\n                    : null\n            }\n        </AppTag>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}